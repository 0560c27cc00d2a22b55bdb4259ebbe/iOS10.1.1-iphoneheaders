/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, December 27, 2016 at 5:08:24 PM Japan Standard Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /Applications/MobileSafari.app/MobileSafari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MobileSafari/MobileSafari-Structs.h>
#import <libobjc.A.dylib/_SFSafeBrowsingControllerDelegate.h>
#import <libobjc.A.dylib/_SFPageLoadErrorControllerDelegate.h>
#import <MobileSafari/AppBannerMetaTagContentObserver.h>
#import <MobileSafari/LoadingControllerDelegate.h>
#import <MobileSafari/QuickWebsiteSearchEventListener.h>
#import <MobileSafari/StoreBannerDelegate.h>
#import <libobjc.A.dylib/WBSFluidProgressStateSource.h>
#import <libobjc.A.dylib/WBSFluidProgressControllerWindowDelegate.h>
#import <libobjc.A.dylib/WBUFormAutoFillControllerDelegate.h>
#import <libobjc.A.dylib/WKNavigationDelegatePrivate.h>
#import <libobjc.A.dylib/WKUIDelegatePrivate.h>
#import <libobjc.A.dylib/_SFDialogControllerDelegate.h>
#import <libobjc.A.dylib/_SFFindOnPageViewDelegate.h>
#import <libobjc.A.dylib/_WKFormDelegate.h>
#import <MobileSafari/_WKDiagnosticLoggingDelegate.h>
#import <libobjc.A.dylib/_SFTelephonyNavigationMitigationPolicyDelegate.h>
#import <MobileSafari/MergeableItem.h>

@protocol TabDocumentDelegate;
@class NSUUID, BrowserController, _SFQuickLookDocumentController, TabBarItem, LoadingController, _SFQuickLookDocument, WBSFluidProgressState, WBSFluidProgressController, ReaderContextWK2, PageLoadTestStatistics, PageLoadTest, NSDictionary, SafariWebView, NSString, NSUserActivity, NSError, _SFURLSpoofingMitigator, _WKSessionState, _WKRemoteObjectInterface, _SFSafariSharingExtensionController, _SFReloadOptionsController, _SFQuickLookDocumentWriter, WBUInjectedJavaScriptController, WBUWebClipMetadataFetcher, TouchIconFetcher, NSMutableArray, FindOnPageCompletionProvider, WBUFormAutoFillController, _SFFluidProgressView, _SFNavigationBarItem, _SFDialogController, WebBookmark, WKBackForwardListItem, StoreBanner, PinnableBanner, _SFTelephonyNavigationMitigationPolicy, _WKDownload, UIImage, FindOnPageView, _SFDownloadController, TabOverviewItem, TiltedTabItem, WBSAutomaticReadingListItem, NSURL, _SFPageLoadErrorController, WBSSameDocumentNavigationToHistoryVisitCorrelator, _SFSafeBrowsingController, WBSHistoryVisit, LinkPreviewViewController, CSSearchableItemAttributeSet, _SFTabStateData, UIView;

@interface TabDocument : NSObject <_SFSafeBrowsingControllerDelegate, _SFPageLoadErrorControllerDelegate, AppBannerMetaTagContentObserver, LoadingControllerDelegate, QuickWebsiteSearchEventListener, StoreBannerDelegate, WBSFluidProgressStateSource, WBSFluidProgressControllerWindowDelegate, WBUFormAutoFillControllerDelegate, WKNavigationDelegatePrivate, WKUIDelegatePrivate, _SFDialogControllerDelegate, _SFFindOnPageViewDelegate, _WKFormDelegate, _WKDiagnosticLoggingDelegate, _SFTelephonyNavigationMitigationPolicyDelegate, MergeableItem> {

	id<TabDocumentDelegate> _delegate;
	BrowserController* _browserController;
	_SFQuickLookDocumentController* _quickLookDocumentController;
	TabBarItem* _tabBarItem;
	LoadingController* _loadingController;
	_SFQuickLookDocument* _quickLookDocument;
	BOOL _hibernated;
	BOOL _allowURLAsTitle;
	WBSFluidProgressState* _fluidProgressState;
	WBSFluidProgressController* _fluidProgressController;
	BOOL _isClosed;
	ReaderContextWK2* _readerContext;
	BOOL _hasDoneReaderAvailabilityDetection;
	BOOL _wasOpenedFromLink;
	BOOL _wasOpenedFromHistory;
	unsigned long long _downloadBackgroundTaskIdentifier;
	PageLoadTestStatistics* _pageLoadStatistics;
	PageLoadTest* _pageLoadTest;
	BOOL _showingReader;
	BOOL _shouldRestoreReader;
	long long _readerViewTopScrollOffset;
	long long _externalAppRedirectState;
	NSDictionary* _initialArticleScrollDictionaryForCloudTab;
	SafariWebView* _readerWebView;
	unsigned long long _progressAnimationSuppressedCount;
	BOOL _EVOrganizationNameIsValid;
	NSString* _EVOrganizationName;
	NSUserActivity* _userActivity;
	BOOL _forwardActivityToCoreSpotlight;
	SafariWebView* _webView;
	NSError* _lastLoadError;
	_SFURLSpoofingMitigator* _URLSpoofingMitigator;
	_WKSessionState* _savedSessionState;
	_WKRemoteObjectInterface* _siteSpecificSearchEventListenerInterface;
	_WKRemoteObjectInterface* _appBannerMetaTagContentObserverInterface;
	_SFSafariSharingExtensionController* _sharingExtensionController;
	_SFReloadOptionsController* _reloadOptionsController;
	_SFQuickLookDocumentWriter* _quickLookDocumentWriter;
	WBUInjectedJavaScriptController* _activityJSController;
	WBUWebClipMetadataFetcher* _webClipMetadataFetcher;
	TouchIconFetcher* _touchIconFetcher;
	NSMutableArray* _fallbackURLs;
	BOOL _loadWasUserDriven;
	FindOnPageCompletionProvider* _findCompletionProvider;
	WBUFormAutoFillController* _autoFillController;
	_SFFluidProgressView* _progressView;
	_SFNavigationBarItem* _navigationBarItem;
	BOOL _displayingStandaloneImage;
	BOOL _displayingStandaloneMedia;
	BOOL _quickLookDocumentCheckCompleted;
	BOOL _privateBrowsingEnabled;
	BOOL _didFirstPaint;
	_SFDialogController* _dialogController;
	BOOL _shouldSuppressDialogsThatBlockWebProcess;
	WebBookmark* _bookmarkForIconFetching;
	WKBackForwardListItem* _backForwardListItemForCurrentAppLinkBannerCheck;
	StoreBanner* _storeBanner;
	PinnableBanner* _appBannerPendingFirstPaint;
	BOOL _sourceApplicationIsValid;
	BOOL _isDisplayingTelephonyPrompt;
	_SFTelephonyNavigationMitigationPolicy* _telephonyNavigationPolicy;
	BOOL siteCustomIconPrecomposed;
	BOOL _shouldRevealAppLinkBannerForNextCommit;
	BOOL _storeBannersAreDisabled;
	BOOL _suppressingProgressAnimationForNavigationGesture;
	BOOL _wantsReaderWhenActivated;
	BOOL _hibernatedDueToMemoryWarning;
	BOOL _showingContinuous;
	BOOL _persistWhenHibernated;
	BOOL _active;
	BOOL _blankDocument;
	BOOL _preparingForNewUserActivity;
	BOOL _didFinishDocumentLoad;
	BOOL _didFirstLayout;
	BOOL _contentIsReadyForSnapshot;
	BOOL _downloadedFileTypeIsQuickLookDocument;
	_WKDownload* _fileDownload;
	UIImage* siteCustomIcon;
	FindOnPageView* _findOnPageView;
	_SFDownloadController* _downloadController;
	PinnableBanner* _appBanner;
	NSString* _sourceApplicationBundleIdentifierForNextCommit;
	TabOverviewItem* _tabOverviewItem;
	TiltedTabItem* _tiltedTabItem;
	WebBookmark* _readingListBookmark;
	unsigned long long _sessionStateRestorationSource;
	WBSAutomaticReadingListItem* _automaticReadingListItem;
	NSURL* _webFeedURL;
	NSURL* _URLFromExternalApplication;
	_SFPageLoadErrorController* _pageLoadErrorController;
	WBSSameDocumentNavigationToHistoryVisitCorrelator* _sameDocumentNavigationToHistoryVisitCorrelator;
	_SFSafeBrowsingController* _safeBrowsingController;
	NSURL* _tabReuseURL;
	NSUUID* _UUID;
	double _lastViewedTime;
	WBSHistoryVisit* _lastVisit;
	LinkPreviewViewController* _previewViewController;
	NSUUID* _ownerUUID;
	CSSearchableItemAttributeSet* _searchableItemAttributes;
	CGPoint _scrollPoint;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,getter=isShowingContinuous,nonatomic) BOOL showingContinuous;                                                                 //@synthesize showingContinuous=_showingContinuous - In the implementation block
@property (assign,nonatomic,__weak) BrowserController * browserController;                                                                      //@synthesize browserController=_browserController - In the implementation block
@property (nonatomic,readonly) _SFReloadOptionsController * reloadOptionsController;                                                            //@synthesize reloadOptionsController=_reloadOptionsController - In the implementation block
@property (nonatomic,readonly) FindOnPageView * findOnPageView;                                                                                 //@synthesize findOnPageView=_findOnPageView - In the implementation block
@property (nonatomic,retain) _SFDownloadController * downloadController;                                                                        //@synthesize downloadController=_downloadController - In the implementation block
@property (nonatomic,retain) _WKDownload * fileDownload;                                                                                        //@synthesize fileDownload=_fileDownload - In the implementation block
@property (nonatomic,retain) _SFQuickLookDocument * quickLookDocument;                                                                          //@synthesize quickLookDocument=_quickLookDocument - In the implementation block
@property (assign,nonatomic) BOOL wasOpenedFromLink;                                                                                            //@synthesize wasOpenedFromLink=_wasOpenedFromLink - In the implementation block
@property (nonatomic,retain,readonly) _SFQuickLookDocumentController * quickLookDocumentController;                                             //@synthesize quickLookDocumentController=_quickLookDocumentController - In the implementation block
@property (assign,getter=isShowingReader,nonatomic) BOOL showingReader;                                                                         //@synthesize showingReader=_showingReader - In the implementation block
@property (assign,nonatomic) BOOL shouldRestoreReader;                                                                                          //@synthesize shouldRestoreReader=_shouldRestoreReader - In the implementation block
@property (assign,nonatomic) long long readerViewTopScrollOffset;                                                                               //@synthesize readerViewTopScrollOffset=_readerViewTopScrollOffset - In the implementation block
@property (nonatomic,retain) PinnableBanner * appBanner;                                                                                        //@synthesize appBanner=_appBanner - In the implementation block
@property (assign,nonatomic) BOOL shouldRevealAppLinkBannerForNextCommit;                                                                       //@synthesize shouldRevealAppLinkBannerForNextCommit=_shouldRevealAppLinkBannerForNextCommit - In the implementation block
@property (nonatomic,copy) NSString * sourceApplicationBundleIdentifierForNextCommit;                                                           //@synthesize sourceApplicationBundleIdentifierForNextCommit=_sourceApplicationBundleIdentifierForNextCommit - In the implementation block
@property (assign,nonatomic) BOOL storeBannersAreDisabled;                                                                                      //@synthesize storeBannersAreDisabled=_storeBannersAreDisabled - In the implementation block
@property (assign,nonatomic) long long externalAppRedirectState;                                                                                //@synthesize externalAppRedirectState=_externalAppRedirectState - In the implementation block
@property (nonatomic,retain) UIImage * siteCustomIcon; 
@property (assign,nonatomic) BOOL siteCustomIconPrecomposed; 
@property (getter=isShowingErrorPage,nonatomic,readonly) BOOL showingErrorPage; 
@property (nonatomic,readonly) TabOverviewItem * tabOverviewItem;                                                                               //@synthesize tabOverviewItem=_tabOverviewItem - In the implementation block
@property (nonatomic,readonly) TiltedTabItem * tiltedTabItem;                                                                                   //@synthesize tiltedTabItem=_tiltedTabItem - In the implementation block
@property (nonatomic,retain) WebBookmark * readingListBookmark;                                                                                 //@synthesize readingListBookmark=_readingListBookmark - In the implementation block
@property (assign,nonatomic) BOOL suppressingProgressAnimationForNavigationGesture;                                                             //@synthesize suppressingProgressAnimationForNavigationGesture=_suppressingProgressAnimationForNavigationGesture - In the implementation block
@property (assign,nonatomic) BOOL wantsReaderWhenActivated;                                                                                     //@synthesize wantsReaderWhenActivated=_wantsReaderWhenActivated - In the implementation block
@property (nonatomic,readonly) BOOL privateBrowsingEnabled;                                                                                     //@synthesize privateBrowsingEnabled=_privateBrowsingEnabled - In the implementation block
@property (assign,getter=isDisplayingStandaloneImage,nonatomic) BOOL displayingStandaloneImage;                                                 //@synthesize displayingStandaloneImage=_displayingStandaloneImage - In the implementation block
@property (assign,getter=isDisplayingStandaloneMedia,nonatomic) BOOL displayingStandaloneMedia;                                                 //@synthesize displayingStandaloneMedia=_displayingStandaloneMedia - In the implementation block
@property (assign,getter=wasHibernatedDueToMemoryWarning,nonatomic) BOOL hibernatedDueToMemoryWarning;                                          //@synthesize hibernatedDueToMemoryWarning=_hibernatedDueToMemoryWarning - In the implementation block
@property (assign,nonatomic) unsigned long long sessionStateRestorationSource;                                                                  //@synthesize sessionStateRestorationSource=_sessionStateRestorationSource - In the implementation block
@property (nonatomic,__weak,readonly) id<WBSFluidProgressStateSource> currentFluidProgressStateSource; 
@property (nonatomic,retain) PageLoadTestStatistics * pageLoadStatistics;                                                                       //@synthesize pageLoadStatistics=_pageLoadStatistics - In the implementation block
@property (nonatomic,readonly) WBSFluidProgressState * progressState;                                                                           //@synthesize fluidProgressState=_fluidProgressState - In the implementation block
@property (nonatomic,retain,readonly) WBSAutomaticReadingListItem * automaticReadingListItem;                                                   //@synthesize automaticReadingListItem=_automaticReadingListItem - In the implementation block
@property (nonatomic,retain) NSURL * webFeedURL;                                                                                                //@synthesize webFeedURL=_webFeedURL - In the implementation block
@property (nonatomic,readonly) _SFSafariSharingExtensionController * sharingExtensionController; 
@property (nonatomic,readonly) WBUInjectedJavaScriptController * activityJSController; 
@property (nonatomic,retain) NSURL * URLFromExternalApplication;                                                                                //@synthesize URLFromExternalApplication=_URLFromExternalApplication - In the implementation block
@property (nonatomic,readonly) WBUWebClipMetadataFetcher * webClipMetadataFetcher; 
@property (nonatomic,readonly) _SFPageLoadErrorController * pageLoadErrorController;                                                            //@synthesize pageLoadErrorController=_pageLoadErrorController - In the implementation block
@property (nonatomic,readonly) WBSSameDocumentNavigationToHistoryVisitCorrelator * sameDocumentNavigationToHistoryVisitCorrelator;              //@synthesize sameDocumentNavigationToHistoryVisitCorrelator=_sameDocumentNavigationToHistoryVisitCorrelator - In the implementation block
@property (nonatomic,readonly) _SFTabStateData * tabStateData; 
@property (assign,nonatomic) BOOL persistWhenHibernated;                                                                                        //@synthesize persistWhenHibernated=_persistWhenHibernated - In the implementation block
@property (assign,getter=isActive,nonatomic) BOOL active;                                                                                       //@synthesize active=_active - In the implementation block
@property (nonatomic,readonly) SafariWebView * webView;                                                                                         //@synthesize webView=_webView - In the implementation block
@property (nonatomic,readonly) UIView * frontView; 
@property (assign,getter=isBlankDocument,nonatomic) BOOL blankDocument;                                                                         //@synthesize blankDocument=_blankDocument - In the implementation block
@property (assign,getter=isPreparingForNewUserActivity,nonatomic) BOOL preparingForNewUserActivity;                                             //@synthesize preparingForNewUserActivity=_preparingForNewUserActivity - In the implementation block
@property (nonatomic,readonly) TabBarItem * tabBarItem;                                                                                         //@synthesize tabBarItem=_tabBarItem - In the implementation block
@property (nonatomic,readonly) _SFNavigationBarItem * navigationBarItem; 
@property (nonatomic,readonly) _SFSafeBrowsingController * safeBrowsingController;                                                              //@synthesize safeBrowsingController=_safeBrowsingController - In the implementation block
@property (getter=isAlive,nonatomic,readonly) BOOL alive; 
@property (nonatomic,readonly) _WKSessionState * sessionState; 
@property (assign,nonatomic) CGPoint scrollPoint;                                                                                               //@synthesize scrollPoint=_scrollPoint - In the implementation block
@property (nonatomic,copy) NSURL * tabReuseURL;                                                                                                 //@synthesize tabReuseURL=_tabReuseURL - In the implementation block
@property (nonatomic,copy) NSUUID * UUID;                                                                                                       //@synthesize UUID=_UUID - In the implementation block
@property (assign,nonatomic) double lastViewedTime;                                                                                             //@synthesize lastViewedTime=_lastViewedTime - In the implementation block
@property (nonatomic,retain) WBSHistoryVisit * lastVisit;                                                                                       //@synthesize lastVisit=_lastVisit - In the implementation block
@property (nonatomic,copy) NSString * customUserAgent; 
@property (nonatomic,readonly) BOOL didFinishDocumentLoad;                                                                                      //@synthesize didFinishDocumentLoad=_didFinishDocumentLoad - In the implementation block
@property (nonatomic,readonly) BOOL didFirstLayout;                                                                                             //@synthesize didFirstLayout=_didFirstLayout - In the implementation block
@property (nonatomic,readonly) BOOL contentIsReadyForSnapshot;                                                                                  //@synthesize contentIsReadyForSnapshot=_contentIsReadyForSnapshot - In the implementation block
@property (nonatomic,retain) LinkPreviewViewController * previewViewController;                                                                 //@synthesize previewViewController=_previewViewController - In the implementation block
@property (assign,nonatomic) BOOL downloadedFileTypeIsQuickLookDocument;                                                                        //@synthesize downloadedFileTypeIsQuickLookDocument=_downloadedFileTypeIsQuickLookDocument - In the implementation block
@property (assign,nonatomic,__weak) NSUUID * ownerUUID;                                                                                         //@synthesize ownerUUID=_ownerUUID - In the implementation block
@property (nonatomic,retain) CSSearchableItemAttributeSet * searchableItemAttributes;                                                           //@synthesize searchableItemAttributes=_searchableItemAttributes - In the implementation block
+(id)tabDocumentForWKWebView:(id)arg1 ;
-(id)URLForSharing;
-(void)snapshotWithSize:(CGSize)arg1 options:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(id)titleForSharing;
-(void)preparePrintInteractionController:(id)arg1 withPrintRenderer:(id)arg2 frame:(id)arg3 forUse:(long long)arg4 completion:(/*^block*/id)arg5 ;
-(BOOL)isPDFDocument;
-(id)readerContext;
-(void)clearReaderView;
-(void)setSiteCustomIcon:(UIImage *)arg1 ;
-(void)didFailToContinueUserActivity;
-(id)loadURL:(id)arg1 userDriven:(BOOL)arg2 ;
-(id)loadCloudTab:(id)arg1 ;
-(void)setBrowserController:(BrowserController *)arg1 ;
-(void)invalidateSourceApplication;
-(void)updateInternalPreferences;
-(void)doneWaitingToContinueUserActivity;
-(void)prepareToContinueUserActivity;
-(void)updateTabTitle;
-(BOOL)isBlankDocument;
-(id)initWithBrowserController:(id)arg1 ;
-(void)setBlankDocument:(BOOL)arg1 ;
-(void)setPreparingForNewUserActivity:(BOOL)arg1 ;
-(_SFNavigationBarItem *)navigationBarItem;
-(TabOverviewItem *)tabOverviewItem;
-(void)setPageLoadStatistics:(PageLoadTestStatistics *)arg1 ;
-(void)loadTestURL:(id)arg1 withCallback:(/*^block*/id)arg2 ;
-(id)_backForwardList;
-(BrowserController *)browserController;
-(BOOL)canSubscribeToWebFeed;
-(id)titleForNewBookmark;
-(WBSAutomaticReadingListItem *)automaticReadingListItem;
-(void)clearBrowserController;
-(void)stopAdvertisingProactiveActivityContent;
-(PinnableBanner *)appBanner;
-(BOOL)hasQuickLookContent;
-(BOOL)isPreparingForNewUserActivity;
-(void)endSuppressingProgressAnimation;
-(void)beginSuppressingProgressAnimation;
-(void)becomeFirstResponderWithSelectionMovingForward:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setURLFromExternalApplication:(NSURL *)arg1 ;
-(void)setTabReuseURL:(NSURL *)arg1 ;
-(void)hibernate;
-(void)setShouldRestoreReader:(BOOL)arg1 ;
-(void)restoreSessionState:(id)arg1 andNavigate:(BOOL)arg2 fromSafariViewService:(BOOL)arg3 ;
-(void)setShouldRevealAppLinkBannerForNextCommit:(BOOL)arg1 ;
-(void)setSourceApplicationBundleIdentifierForNextCommit:(NSString *)arg1 ;
-(BOOL)isShowingErrorPage;
-(_SFSafeBrowsingController *)safeBrowsingController;
-(_SFQuickLookDocumentController *)quickLookDocumentController;
-(void)userDidManipulateVisibleRegion;
-(void)setSuppressingProgressAnimationForNavigationGesture:(BOOL)arg1 ;
-(id)loadRequest:(id)arg1 userDriven:(BOOL)arg2 ;
-(BOOL)quickLookDocumentIsReady;
-(void)clearBackForwardList;
-(void)setAppBanner:(PinnableBanner *)arg1 ;
-(void)setClosed:(BOOL)arg1 userDriven:(BOOL)arg2 ;
-(void)willClose;
-(id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(BOOL)arg4 hibernated:(BOOL)arg5 bookmark:(id)arg6 browserController:(id)arg7 relatedWebView:(id)arg8 ;
-(void)unhibernateWithRelatedWebView:(id)arg1 ;
-(void)restoreSessionState:(id)arg1 andNavigate:(BOOL)arg2 ;
-(void)animateProgressForCompletedDocument;
-(BOOL)shouldRestoreReader;
-(void)createBrowserReaderViewIfNeeded;
-(BOOL)hasDoneReaderDetection;
-(BOOL)addReadingListBookmarkWithBlock:(/*^block*/id)arg1 ;
-(BOOL)isHibernated;
-(BOOL)contentIsReadyForSnapshot;
-(void)reinsertQuickLookDocumentView;
-(void)freezeForNavigationGesture;
-(BOOL)mustShowBarsForBackForwardListItem:(id)arg1 ;
-(void)unfreezeAfterNavigationGesture:(BOOL)arg1 ;
-(void)performAutoFillAction;
-(void)reloadAllowingContentBlockers:(BOOL)arg1 ;
-(void)subscribeToWebFeed;
-(void)setDownloadedFileTypeIsQuickLookDocument:(BOOL)arg1 ;
-(void)_closeTabDocumentAnimated:(BOOL)arg1 ;
-(void)_showProfileInstallAlert;
-(void)readerContentIsReadyForDisplay;
-(void)endSuppressingProgressAnimationAnimated:(BOOL)arg1 ;
-(BOOL)isDisplayingStandaloneMedia;
-(BOOL)isDisplayingStandaloneImage;
-(id)backListControllerWithLimit:(int)arg1 ;
-(id)forwardListControllerWithLimit:(int)arg1 ;
-(_SFPageLoadErrorController *)pageLoadErrorController;
-(id)printInfoWithPrintRenderer:(id)arg1 ;
-(id)loadURL:(id)arg1 fromBookmark:(id)arg2 ;
-(id)loadAutomaticReadingListItem:(id)arg1 ;
-(NSURL *)webFeedURL;
-(id)dataForDisplayedPDF;
-(id)suggestedFilenameForDisplayedPDF;
-(BOOL)shouldShowReaderOnActivate;
-(id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(BOOL)arg4 hibernated:(BOOL)arg5 bookmark:(id)arg6 browserController:(id)arg7 ;
-(void)setAutomaticReadingListItem:(WBSAutomaticReadingListItem *)arg1 ;
-(unsigned long long)sessionStateRestorationSource;
-(BOOL)currentPageLoadedFromReadingList;
-(id)customUserVisibleStringForReadingListBookmarkURL:(id)arg1 ;
-(void)setLastVisit:(WBSHistoryVisit *)arg1 ;
-(WBSSameDocumentNavigationToHistoryVisitCorrelator *)sameDocumentNavigationToHistoryVisitCorrelator;
-(void)loadingController:(id)arg1 willLoadRequest:(id)arg2 userDriven:(BOOL)arg3 ;
-(void)loadingControllerWillStartUserDrivenLoad:(id)arg1 ;
-(void)loadTestURL:(id)arg1 withCallback:(/*^block*/id)arg2 pagesNeedingMemoryWarningSent:(id)arg3 ;
-(id)standaloneImageData;
-(void)setOverlaidAccessoryViewsInset:(CGSize)arg1 ;
-(BOOL)isAlive;
-(WebBookmark *)readingListBookmark;
-(_SFTabStateData *)tabStateData;
-(void)setStoreBannersAreDisabled:(BOOL)arg1 ;
-(void)clearBackForwardListKeepingCurrentItem;
-(PageLoadTestStatistics *)pageLoadStatistics;
-(void)didDeactivateReaderWithMode:(unsigned long long)arg1 ;
-(BOOL)isShowingReadingListArchive;
-(id)readerPageArchiveURL;
-(void)didClickLinkRequestingNewWindowInReaderWithRequest:(id)arg1 ;
-(void)didClickLinkInReaderWithRequest:(id)arg1 ;
-(id)actionsForElement:(id)arg1 defaultActions:(id)arg2 ;
-(void)setPersistWhenHibernated:(BOOL)arg1 ;
-(BOOL)wasHibernatedDueToMemoryWarning;
-(TiltedTabItem *)tiltedTabItem;
-(void)setNeedsNewTabSnapshot;
-(void)resetTabViewItems;
-(NSURL *)tabReuseURL;
-(id)initWithTabStateData:(id)arg1 hibernated:(BOOL)arg2 browserController:(id)arg3 ;
-(id)tabStateDataForQuickUpdate;
-(void)setReadingListBookmark:(WebBookmark *)arg1 ;
-(void)_destroyDocumentView;
-(void)clearReaderContext;
-(void)clearPageLoadStatistics;
-(id)_titleIncludeLoading:(BOOL)arg1 allowURLStringFallback:(BOOL)arg2 allowUntitled:(BOOL)arg3 ;
-(id)_titleIncludeLoading:(BOOL)arg1 allowURLStringFallback:(BOOL)arg2 ;
-(id)_addTitlePrefixToString:(id)arg1 ;
-(id)tabBarTitle;
-(void)_updateNavigationBarItem;
-(void)_searchEngineControllerDidBecomeAvailable:(id)arg1 ;
-(void)_updateStackName;
-(void)_createDocumentViewRelatedTo:(id)arg1 ;
-(id)_initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(BOOL)arg4 bookmark:(id)arg5 browserController:(id)arg6 createDocumentView:(/*^block*/id)arg7 ;
-(void)unhibernate;
-(CSSearchableItemAttributeSet *)searchableItemAttributes;
-(void)setSearchableItemAttributes:(CSSearchableItemAttributeSet *)arg1 ;
-(void)setSiteCustomIconPrecomposed:(BOOL)arg1 ;
-(void)clearTabReuseURL;
-(void)setQuickLookDocumentFromCurrentBackForwardListItem:(id)arg1 ;
-(id)quickLookDocumentFromCurrentBackForwardListItem;
-(void)snapshotForWebClipIcon:(/*^block*/id)arg1 ;
-(id)_loadURLInternal:(id)arg1 userDriven:(BOOL)arg2 ;
-(id)loadWebClip:(id)arg1 userDriven:(BOOL)arg2 ;
-(void)restoreScrollPositionWithCloudTab:(id)arg1 ;
-(void)clearReaderScrollInformation;
-(void)_updateShowingContinuous;
-(void)setShowingContinuous:(BOOL)arg1 ;
-(id)_backListWithLimit:(unsigned long long)arg1 ;
-(id)_forwardListWithLimit:(unsigned long long)arg1 ;
-(void)_redirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 promptPolicy:(long long)arg3 isMainFrame:(BOOL)arg4 userAction:(id)arg5 ;
-(void)_completeRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 userCancelled:(BOOL)arg3 ;
-(BOOL)_shouldPromptUserForExternalNavigationResult:(id)arg1 policy:(long long)arg2 userAction:(id)arg3 ;
-(void)_queueAlertForRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 isMainFrame:(BOOL)arg3 promptPolicy:(long long)arg4 userAction:(id)arg5 ;
-(void)_clearNavigationSource;
-(id)_resultOfLoadingRequest:(id)arg1 inMainFrame:(BOOL)arg2 userInitiated:(BOOL)arg3 ;
-(void)_cancelAntiPhishingCheckAndInvalidateSafeBrowsingObserver;
-(void)_createDocumentViewWithConfiguration:(id)arg1 ;
-(void)_loadingControllerEstimatedProgressChangedTo:(double)arg1 ;
-(void)_loadingControllerDidStartLoading;
-(void)_loadingControllerDidStopLoadingWithError:(id)arg1 ;
-(void)_startedLoadingResources;
-(void)_stoppedLoadingResources;
-(void)_updateFallbackURLsForUserTypedAddress:(id)arg1 ;
-(id)_loadNextFallbackURLWithWebClip:(id)arg1 ;
-(id)_webViewConfiguration;
-(void)didAutoDetectSiteSpecificSearchProviderWithOriginatingURL:(id)arg1 searchURLTemplate:(id)arg2 ;
-(void)didFindAppBannerWithContent:(id)arg1 ;
-(id)touchIconFetcher;
-(BOOL)persistWhenHibernated;
-(void)_setAppBannerWhenPainted:(id)arg1 ;
-(void)_forceStopLoading;
-(BOOL)_shouldAskAboutInsecureFormSubmissionForAction:(id)arg1 andURL:(id)arg2 ;
-(id)_readingListArchiveNextPageLinkForRequest:(id)arg1 targetFrame:(id)arg2 ;
-(BOOL)_navigationIsRedirectToAppStore:(id)arg1 ;
-(void)_addNoFeedAppSupportAlert;
-(void)_loadStartedDuringSimulatedClickForURL:(id)arg1 ;
-(void)setQuickLookDocument:(_SFQuickLookDocument *)arg1 ;
-(BOOL)shouldActivateReaderWhenAvailable;
-(void)setWebFeedURL:(NSURL *)arg1 ;
-(void)_updateInitialZoomScaleForPPT;
-(void)_showQuickLookDocumentView;
-(void)_hideQuickLookDocumentView;
-(void)_clearAppBannerIfNotCurrentStoreBanner;
-(void)_checkForAppLink;
-(id)_initWithBrowserController:(id)arg1 configuration:(id)arg2 ;
-(id)tabDocumentForPreviewURL:(id)arg1 relatedToWebView:(id)arg2 ;
-(id)_actionsForElement:(id)arg1 defaultActions:(id)arg2 previewViewController:(id)arg3 ;
-(void)_willCommitPreviewViewController:(id)arg1 ;
-(void)_updateSnapshotForWebClip:(id)arg1 ;
-(WBUWebClipMetadataFetcher *)webClipMetadataFetcher;
-(void)setHibernatedDueToMemoryWarning:(BOOL)arg1 ;
-(void)setLoading;
-(CGRect)_convertRectFromDocumentToWebView:(CGRect)arg1 ;
-(void)_animateElement:(id)arg1 toToolbarButton:(int)arg2 ;
-(id)resultOfLoadingURL:(id)arg1 ;
-(id)_openInNewPageActionForElement:(id)arg1 previewViewController:(id)arg2 ;
-(id)_addToReadingListActionForElement:(id)arg1 withURL:(id)arg2 ;
-(void)_loadingControllerWillLoadRequest:(id)arg1 userDriven:(BOOL)arg2 ;
-(void)findOnPageCompletionProvider:(id)arg1 setStringToComplete:(id)arg2 ;
-(BOOL)didFirstLayout;
-(BOOL)didFinishDocumentLoad;
-(void)_preparePrintInteractionController:(id)arg1 withPrintRenderer:(id)arg2 frame:(id)arg3 forUse:(long long)arg4 onlyIfLoaded:(BOOL)arg5 completion:(/*^block*/id)arg6 ;
-(void)_showPreparePrintInteractionControllerDuringLoadAlertForUse:(long long)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)dismissStoreBanner:(id)arg1 ;
-(void)setStoreBanner:(id)arg1 isPinned:(BOOL)arg2 ;
-(id)rawTitle;
-(void)snapshotWithSize:(CGSize)arg1 topBackdropHeight:(double)arg2 options:(unsigned long long)arg3 completion:(/*^block*/id)arg4 ;
-(BOOL)supportsFindOnPage;
-(void)saveWebArchiveToPath:(id)arg1 completion:(/*^block*/id)arg2 ;
-(_WKDownload *)fileDownload;
-(void)setFileDownload:(_WKDownload *)arg1 ;
-(UIImage *)siteCustomIcon;
-(BOOL)siteCustomIconPrecomposed;
-(long long)externalAppRedirectState;
-(void)setExternalAppRedirectState:(long long)arg1 ;
-(_SFDownloadController *)downloadController;
-(void)setDownloadController:(_SFDownloadController *)arg1 ;
-(BOOL)shouldRevealAppLinkBannerForNextCommit;
-(NSString *)sourceApplicationBundleIdentifierForNextCommit;
-(BOOL)storeBannersAreDisabled;
-(BOOL)suppressingProgressAnimationForNavigationGesture;
-(BOOL)wantsReaderWhenActivated;
-(void)setWantsReaderWhenActivated:(BOOL)arg1 ;
-(void)setDisplayingStandaloneMedia:(BOOL)arg1 ;
-(void)setSessionStateRestorationSource:(unsigned long long)arg1 ;
-(BOOL)isShowingContinuous;
-(NSURL *)URLFromExternalApplication;
-(BOOL)downloadedFileTypeIsQuickLookDocument;
-(void)collectReadingListItemInfo;
-(void)didActivateReader;
-(void)updateReadingListItemPreviewText:(id)arg1 ;
-(void)setOwnerUUID:(NSUUID *)arg1 ;
-(CGPoint)scrollPoint;
-(void)setScrollPoint:(CGPoint)arg1 ;
-(void)setAllowsRemoteInspection:(BOOL)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(void)reload;
-(BOOL)isActive;
-(id)title;
-(id)URL;
-(BOOL)_isSecure;
-(NSUUID *)UUID;
-(TabBarItem *)tabBarItem;
-(void)setActive:(BOOL)arg1 ;
-(SafariWebView *)webView;
-(void)setCustomUserAgent:(NSString *)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2 ;
-(BOOL)isLoading;
-(id)pdfView;
-(BOOL)canGoBack;
-(BOOL)canGoForward;
-(void)stopLoading;
-(void)goBack;
-(void)goForward;
-(id)URLString;
-(id)loadUserTypedAddress:(id)arg1 ;
-(double)estimatedProgress;
-(UIView *)frontView;
-(void)setClosed:(BOOL)arg1 ;
-(BOOL)isClosed;
-(_WKSessionState *)sessionState;
-(NSUUID *)ownerUUID;
-(void)_webView:(id)arg1 logDiagnosticMessage:(id)arg2 description:(id)arg3 ;
-(void)_webView:(id)arg1 logDiagnosticMessageWithResult:(id)arg2 description:(id)arg3 result:(long long)arg4 ;
-(void)_webView:(id)arg1 logDiagnosticMessageWithValue:(id)arg2 description:(id)arg3 value:(id)arg4 ;
-(void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3 ;
-(NSString *)customUserAgent;
-(void)goToBackForwardListItem:(id)arg1 ;
-(SecTrustRef)_serverTrust;
-(BOOL)isShowingReader;
-(WBSFluidProgressState *)progressState;
-(id)expectedOrCurrentURL;
-(id<WBSFluidProgressStateSource>)currentFluidProgressStateSource;
-(void)clearFluidProgressState;
-(BOOL)createFluidProgressState;
-(BOOL)hasFailedURL;
-(void)fluidProgressRocketAnimationDidComplete;
-(id)committedURL;
-(WBSHistoryVisit *)lastVisit;
-(void)_webViewWebProcessDidCrash:(id)arg1 ;
-(void)presentDialog:(id)arg1 forTelephonyNavigationPolicy:(id)arg2 ;
-(id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4 ;
-(void)webViewDidClose:(id)arg1 ;
-(void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)readerWebView;
-(id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4 ;
-(void)_webView:(id)arg1 commitPreviewedViewController:(id)arg2 ;
-(void)pageLoadErrorControllerDidShowAlert:(id)arg1 ;
-(void)pageLoadErrorController:(id)arg1 setAllowsSpecificHTTPSCertificate:(id)arg2 forHost:(id)arg3 ;
-(void)pageLoadErrorControllerWillShowPrintingDuringLoadAlert:(id)arg1 action:(int)arg2 ;
-(void)pageLoadErrorController:(id)arg1 didChooseOnlyAvailableIdentityForAuthenticationChallenge:(id)arg2 ;
-(BOOL)pageLoadErrorControllerShouldHandleCertificateError:(id)arg1 ;
-(void)pageLoadErrorController:(id)arg1 loadFailedRequestAfterError:(id)arg2 ;
-(double)lastViewedTime;
-(void)setLastViewedTime:(double)arg1 ;
-(long long)readerViewTopScrollOffset;
-(void)setReaderViewTopScrollOffset:(long long)arg1 ;
-(void)setShowingReader:(BOOL)arg1 ;
-(void)setDisplayingStandaloneImage:(BOOL)arg1 ;
-(int)readingListBookmarkID;
-(BOOL)wasOpenedFromLink;
-(void)setWasOpenedFromLink:(BOOL)arg1 ;
-(void)safeBrowsingControllerDidShowSecurityWarningPage:(id)arg1 ;
-(void)safeBrowsingControllerClosePage:(id)arg1 ;
-(void)safeBrowsingController:(id)arg1 didIgnoreWarningWithURL:(id)arg2 ;
-(void)safeBrowsingControllerGoBack:(id)arg1 ;
-(void)cancelCheckForFraudulentWebsites;
-(void)startCheckingFraudulentWebSitesWithURL:(id)arg1 ;
-(_SFSafariSharingExtensionController *)sharingExtensionController;
-(void)didDetermineReaderAvailability:(BOOL)arg1 ;
-(BOOL)isReaderAvailable;
-(void)visibilityWillChangeForFindOnPageView:(id)arg1 ;
-(id)webViewForFindOnPageView:(id)arg1 ;
-(void)updateFindCompletionProviderWithMatchesCount:(unsigned long long)arg1 forString:(id)arg2 forFindOnPageView:(id)arg3 ;
-(_SFReloadOptionsController *)reloadOptionsController;
-(FindOnPageView *)findOnPageView;
-(BOOL)formAutoFillControllerCanPrefillForm:(id)arg1 ;
-(id)formAutoFillControllerURLForFormAutoFill:(id)arg1 ;
-(BOOL)formAutoFillControllerShouldDisableAutoFill:(id)arg1 ;
-(void)_webView:(id)arg1 navigation:(id)arg2 didFailProvisionalLoadInSubframe:(id)arg3 withError:(id)arg4 ;
-(void)_webView:(id)arg1 navigationDidFinishDocumentLoad:(id)arg2 ;
-(void)_webView:(id)arg1 navigation:(id)arg2 didSameDocumentNavigation:(long long)arg3 ;
-(void)_webView:(id)arg1 renderingProgressDidChange:(unsigned long long)arg2 ;
-(id)_webCryptoMasterKeyForWebView:(id)arg1 ;
-(void)_webViewDidBeginNavigationGesture:(id)arg1 ;
-(void)_webViewDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2 ;
-(void)_webViewWillEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2 ;
-(void)_webView:(id)arg1 willSnapshotBackForwardListItem:(id)arg2 ;
-(void)_webView:(id)arg1 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)arg2 uti:(id)arg3 ;
-(void)_webView:(id)arg1 didFinishLoadForQuickLookDocumentInMainFrame:(id)arg2 ;
-(void)_webView:(id)arg1 decideDatabaseQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 currentOriginUsage:(unsigned long long)arg4 currentDatabaseUsage:(unsigned long long)arg5 expectedUsage:(unsigned long long)arg6 decisionHandler:(/*^block*/id)arg7 ;
-(void)_webView:(id)arg1 decideWebApplicationCacheQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 totalBytesNeeded:(unsigned long long)arg4 decisionHandler:(/*^block*/id)arg5 ;
-(void)_webView:(id)arg1 printFrame:(id)arg2 ;
-(void)_webViewFullscreenMayReturnToInline:(id)arg1 ;
-(void)_webViewDidEnterFullscreen:(id)arg1 ;
-(void)_webViewDidExitFullscreen:(id)arg1 ;
-(void)_webView:(id)arg1 imageOrMediaDocumentSizeChanged:(CGSize)arg2 ;
-(BOOL)_webView:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2 ;
-(id)_webView:(id)arg1 actionsForElement:(id)arg2 defaultActions:(id)arg3 ;
-(void)_webView:(id)arg1 didNotHandleTapAsClickAtPoint:(CGPoint)arg2 ;
-(void)_webView:(id)arg1 willPreviewImageWithURL:(id)arg2 ;
-(void)_webView:(id)arg1 commitPreviewedImageWithURL:(id)arg2 ;
-(void)_webView:(id)arg1 didDismissPreviewViewController:(id)arg2 ;
-(UIEdgeInsets)_webView:(id)arg1 finalObscuredInsetsForScrollView:(id)arg2 withVelocity:(CGPoint)arg3 targetContentOffset:(inout CGPoint*)arg4 ;
-(id)_webView:(id)arg1 previewViewControllerForAnimatedImageAtURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4 imageSize:(CGSize)arg5 ;
-(id)_presentingViewControllerForWebView:(id)arg1 ;
-(BOOL)dialogController:(id)arg1 shouldSuppressDialog:(id)arg2 ;
-(void)dialogController:(id)arg1 willPresentDialog:(id)arg2 ;
-(void)_webView:(id)arg1 didStartInputSession:(id)arg2 ;
-(void)_webView:(id)arg1 willSubmitFormValues:(id)arg2 userObject:(id)arg3 submissionHandler:(/*^block*/id)arg4 ;
-(void)_webView:(id)arg1 accessoryViewCustomButtonTappedInFormInputSession:(id)arg2 ;
-(void)_webView:(id)arg1 insertTextSuggestion:(id)arg2 inInputSession:(id)arg3 ;
-(WBUInjectedJavaScriptController *)activityJSController;
-(BOOL)privateBrowsingEnabled;
-(id)_EVOrganizationName;
-(void)_performSafeBrowsingCheckForURL:(id)arg1 ;
-(void)_invalidateEVOrganizationName;
-(void)_showGenericDownloadAlert;
-(_SFQuickLookDocument *)quickLookDocument;
-(void)invalidateUserActivity;
-(void)updateUserActivity;
-(void)setUUID:(NSUUID *)arg1 ;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didCommitNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFinishNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(LinkPreviewViewController *)previewViewController;
-(void)setPreviewViewController:(LinkPreviewViewController *)arg1 ;
@end

