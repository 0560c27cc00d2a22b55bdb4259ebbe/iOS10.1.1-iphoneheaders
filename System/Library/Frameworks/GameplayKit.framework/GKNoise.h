/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, December 27, 2016 at 4:50:54 PM Japan Standard Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /System/Library/Frameworks/GameplayKit.framework/GameplayKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <GameplayKit/GameplayKit-Structs.h>
@class NSDictionary;

@interface GKNoise : NSObject {

	vector<noise::module::Module *, std::__1::allocator<noise::module::Module *> >* _modules;
	NSDictionary* _gradientColors;

}

@property (nonatomic,copy) NSDictionary * gradientColors;              //@synthesize gradientColors=_gradientColors - In the implementation block
+(id)noiseWithNoiseSource:(id)arg1 ;
+(id)noiseWithComponentNoises:(id)arg1 selectionNoise:(id)arg2 componentBoundaries:(id)arg3 boundaryBlendDistances:(id)arg4 ;
+(id)noiseWithNoiseSource:(id)arg1 gradientColors:(id)arg2 ;
+(id)noiseWithComponentNoises:(id)arg1 selectionNoise:(id)arg2 ;
-(id)init;
-(void)dealloc;
-(void)setGradientColors:(NSDictionary *)arg1 ;
-(void)rotateBy:;
-(NSDictionary *)gradientColors;
-(void)scaleBy:;
-(vector<noise::module::Module *, std::__1::allocator<noise::module::Module *> >*)__modules;
-(float)valueAtPosition:;
-(id)initWithNoiseSource:(id)arg1 ;
-(id)initWithNoiseSource:(id)arg1 gradientColors:(id)arg2 ;
-(void)multiplyWithNoise:(id)arg1 ;
-(void)addWithNoise:(id)arg1 ;
-(void)__blendWithNoise:(id)arg1 selectionNoise:(id)arg2 selectionRangeLowerBound:(double)arg3 selectionRangeUpperBound:(double)arg4 selectionBoundaryBlendDistance:(double)arg5 ;
-(const Module*)cloneRecursive:(const Module*)arg1 ;
-(void)cacheUnaryModule:(Module*)arg1 ;
-(void)cacheBinaryModule:(Module*)arg1 rhsNoise:(id)arg2 ;
-(void)cacheQuaternaryModule:(Module*)arg1 xDisplacementNoise:(id)arg2 yDisplacementNoise:(id)arg3 zDisplacementNoise:(id)arg4 ;
-(void)cacheTernaryModule:(Module*)arg1 rhsNoise:(id)arg2 selectionNoise:(id)arg3 ;
-(void)applyAbsoluteValue;
-(void)clampWithLowerBound:(double)arg1 upperBound:(double)arg2 ;
-(void)raiseToPower:(double)arg1 ;
-(void)applyTurbulenceWithFrequency:(double)arg1 power:(double)arg2 roughness:(int)arg3 seed:(int)arg4 ;
-(void)remapValuesToCurveWithControlPoints:(id)arg1 ;
-(void)remapValuesToTerracesWithPeaks:(id)arg1 terracesInverted:(BOOL)arg2 ;
-(void)moveBy:;
-(void)minimumWithNoise:(id)arg1 ;
-(void)maximumWithNoise:(id)arg1 ;
-(void)raiseToPowerWithNoise:(id)arg1 ;
-(void)displaceXWithNoise:(id)arg1 yWithNoise:(id)arg2 zWithNoise:(id)arg3 ;
-(void)invert;
@end

