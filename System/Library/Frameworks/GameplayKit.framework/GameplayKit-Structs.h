/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, December 27, 2016 at 4:50:54 PM Japan Standard Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /System/Library/Frameworks/GameplayKit.framework/GameplayKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct _NSZone* NSZoneRef;

typedef struct NoiseMap {
	float m_borderValue;
	int m_height;
	unsigned long long m_memUsed;
	float m_pNoiseMap;
	int m_stride;
	int m_width;
} NoiseMap;

typedef struct Vec3 {
	float x;
	float y;
	float z;
} Vec3;

typedef struct SphericalObstacle {
	/*function pointer*/void* _vptr$Obstacle;
	float radius;
	Vec3 center;
	int _seenFrom;
} SphericalObstacle;

typedef struct GKQuad {
	 quadMin;
	 quadMax;
} GKQuad;

typedef struct _compressed_pair<noise::module::Module **, std::__1::allocator<noise::module::Module *> > {
	Module __first_;
} compressed_pair<noise::module::Module **, std::__1::allocator<noise::module::Module *> >;

typedef struct vector<noise::module::Module *, std::__1::allocator<noise::module::Module *> > {
	Module __begin_;
	Module __end_;
	compressed_pair<noise::module::Module **, std::__1::allocator<noise::module::Module *> > __end_cap_;
} vector<noise::module::Module *, std::__1::allocator<noise::module::Module *> >;

typedef struct GKSimpleVehicle {
	/*function pointer*/void* _vptr$AbstractLocalSpace;
	Vec3 _side;
	Vec3 _up;
	Vec3 _forward;
	Vec3 _position;
	float WanderSide;
	float WanderUp;
	Vec3 hisPositionAtNearestApproach;
	Vec3 ourPositionAtNearestApproach;
	BOOL gaudyPursuitAnnotation;
	int serialNumber;
	float _mass;
	float _radius;
	float _speed;
	float _maxForce;
	float _maxSpeed;
	float _curvature;
	Vec3 _lastForward;
	Vec3 _lastPosition;
	Vec3 _smoothedPosition;
	float _smoothedCurvature;
	Vec3 _smoothedAcceleration;
	BOOL m_rightHanded;
} GKSimpleVehicle;

typedef struct {
	[3 field1];
} SCD_Struct_GK8;

typedef struct {
	unsigned long long field1;
	id field2;
	unsigned long long field3;
	unsigned long long field4[5];
} SCD_Struct_GK9;

typedef struct GKBox* GKBoxRef;

typedef struct PolylinePathway {
	/*function pointer*/void* _vptr$PolylinePathway;
	int pointCount;
	Vec3 points;
	float radius;
	BOOL cyclic;
	float segmentLength;
	float segmentProjection;
	Vec3 local;
	Vec3 chosen;
	Vec3 segmentNormal;
	float lengths;
	Vec3 normals;
	float totalPathLength;
} PolylinePathway;

typedef struct mersenne_twister_engine<unsigned long long, 64, 312, 156, 31, 13043109905998158313, 29, 6148914691236517205, 17, 8202884508482404352, 37, 18444473444759240704, 43, 6364136223846793005> {
	unsigned long long __x_[312];
	unsigned long long __i_;
} mersenne_twister_engine<unsigned long long, 64, 312, 156, 31, 13043109905998158313, 29, 6148914691236517205, 17, 8202884508482404352, 37, 18444473444759240704, 43, 6364136223846793005>;

