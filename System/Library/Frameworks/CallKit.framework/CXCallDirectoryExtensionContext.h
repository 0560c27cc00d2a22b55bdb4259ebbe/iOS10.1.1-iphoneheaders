/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, December 27, 2016 at 4:50:13 PM Japan Standard Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /System/Library/Frameworks/CallKit.framework/CallKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Foundation/NSExtensionContext.h>
#import <libobjc.A.dylib/CXCallDirectoryProviderVendorProtocol.h>

@protocol CXCallDirectoryExtensionContextDelegate;
@class CXCallDirectoryBlockingEntryData, CXCallDirectoryIdentificationEntryData, NSString;

@interface CXCallDirectoryExtensionContext : NSExtensionContext <CXCallDirectoryProviderVendorProtocol> {

	id<CXCallDirectoryExtensionContextDelegate> _delegate;
	CXCallDirectoryBlockingEntryData* _pendingBlockingEntryData;
	CXCallDirectoryIdentificationEntryData* _pendingIdentificationEntryData;

}

@property (nonatomic,retain) CXCallDirectoryBlockingEntryData * pendingBlockingEntryData;                          //@synthesize pendingBlockingEntryData=_pendingBlockingEntryData - In the implementation block
@property (nonatomic,retain) CXCallDirectoryIdentificationEntryData * pendingIdentificationEntryData;              //@synthesize pendingIdentificationEntryData=_pendingIdentificationEntryData - In the implementation block
@property (assign,nonatomic,__weak) id<CXCallDirectoryExtensionContextDelegate> delegate;                          //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_extensionAuxiliaryVendorProtocol;
+(id)_extensionAuxiliaryHostProtocol;
-(void)setDelegate:(id<CXCallDirectoryExtensionContextDelegate>)arg1 ;
-(id<CXCallDirectoryExtensionContextDelegate>)delegate;
-(oneway void)requestFailedWithError:(id)arg1 reply:(/*^block*/id)arg2 ;
-(id)_remoteObjectProxyWithErrorHandler:(/*^block*/id)arg1 synchronous:(BOOL)arg2 ;
-(CXCallDirectoryBlockingEntryData *)pendingBlockingEntryData;
-(void)setPendingBlockingEntryData:(CXCallDirectoryBlockingEntryData *)arg1 ;
-(CXCallDirectoryIdentificationEntryData *)pendingIdentificationEntryData;
-(void)setPendingIdentificationEntryData:(CXCallDirectoryIdentificationEntryData *)arg1 ;
-(void)_flushPendingBlockingEntryData;
-(void)_flushPendingIdentificationPhoneNumbersAndLabels;
-(void)addBlockingEntryWithNextSequentialPhoneNumber:(long long)arg1 ;
-(void)addIdentificationEntryWithNextSequentialPhoneNumber:(long long)arg1 label:(id)arg2 ;
-(void)completeRequestWithCompletionHandler:(/*^block*/id)arg1 ;
@end

