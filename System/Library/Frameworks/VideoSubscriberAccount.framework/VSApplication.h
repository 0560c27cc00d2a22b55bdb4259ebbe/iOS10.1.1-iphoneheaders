/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, December 27, 2016 at 4:52:18 PM Japan Standard Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/IKAppContextDelegate.h>
#import <libobjc.A.dylib/IKApplication.h>

@protocol VSApplicationDelegate;
@class NSURL, IKAppContext, VSAppDeviceConfig, NSString;

@interface VSApplication : NSObject <IKAppContextDelegate, IKApplication> {

	BOOL _shouldAllowRemoteInspection;
	NSURL* _bootURL;
	IKAppContext* _appContext;
	id<VSApplicationDelegate> _delegate;
	VSAppDeviceConfig* _appDeviceConfig;

}

@property (nonatomic,retain) VSAppDeviceConfig * appDeviceConfig;                    //@synthesize appDeviceConfig=_appDeviceConfig - In the implementation block
@property (nonatomic,retain) IKAppContext * appContext;                              //@synthesize appContext=_appContext - In the implementation block
@property (nonatomic,copy,readonly) NSURL * bootURL;                                 //@synthesize bootURL=_bootURL - In the implementation block
@property (assign,nonatomic,__weak) id<VSApplicationDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL shouldAllowRemoteInspection;                       //@synthesize shouldAllowRemoteInspection=_shouldAllowRemoteInspection - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(void)setDelegate:(id<VSApplicationDelegate>)arg1 ;
-(void)dealloc;
-(id<VSApplicationDelegate>)delegate;
-(void)stop;
-(void)start;
-(id)appIdentifier;
-(IKAppContext *)appContext;
-(id)activeDocument;
-(id)deviceConfigForContext:(id)arg1 ;
-(id)objectForPlayer:(id)arg1 ;
-(id)objectForPlaylist:(id)arg1 ;
-(id)objectForMediaItem:(id)arg1 ;
-(void)appContext:(id)arg1 evaluateAppJavaScriptInContext:(id)arg2 ;
-(BOOL)appContext:(id)arg1 validateDOMDocument:(id)arg2 inContext:(id)arg3 error:(id*)arg4 ;
-(void)appContext:(id)arg1 didStartWithOptions:(id)arg2 ;
-(void)appContext:(id)arg1 didFailWithError:(id)arg2 ;
-(void)appContext:(id)arg1 didStopWithOptions:(id)arg2 ;
-(BOOL)shouldIgnoreJSValidation;
-(id)appJSURL;
-(id)vendorIdentifier;
-(id)localStorage;
-(id)vendorStorage;
-(id)userDefaultsStorage;
-(BOOL)shouldAllowRemoteInspection;
-(id)appLaunchParams;
-(void)setAppContext:(IKAppContext *)arg1 ;
-(void)_stopApp;
-(void)_startApp;
-(void)sendErrorWithMessage:(id)arg1 ;
-(void)evaluate:(/*^block*/id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_notifyStartDidFailWithError:(id)arg1 ;
-(void)_notifyDidStop;
-(void)appDocumentForDocument:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_notifyDidStart;
-(id)initWithBootURL:(id)arg1 ;
-(void)setShouldAllowRemoteInspection:(BOOL)arg1 ;
-(void)_cleanUpStoppedApp;
-(VSAppDeviceConfig *)appDeviceConfig;
-(NSURL *)bootURL;
-(void)setAppDeviceConfig:(VSAppDeviceConfig *)arg1 ;
@end

