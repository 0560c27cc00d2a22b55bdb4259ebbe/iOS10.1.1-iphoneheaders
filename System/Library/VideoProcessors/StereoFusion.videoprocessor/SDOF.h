/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, December 27, 2016 at 4:44:18 PM Japan Standard Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /System/Library/VideoProcessors/StereoFusion.videoprocessor
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <StereoFusion.videoprocessor/StereoFusion.videoprocessor-Structs.h>
@class DupDownscaleHalfConvert, GDCProcessor, RegPyrDepthMt, SparseRenderingCtx, ADC_Keypoints, MetalContext, SDOFDiagnostics, SDOFTuningParameters, NSDictionary;

@interface SDOF : NSObject {

	DupDownscaleHalfConvert* _downscaler;
	GDCProcessor* _gdc;
	RegPyrDepthMt* _regPyrDepth;
	SparseRenderingCtx* _sparseRenderingContext;
	ADC_Keypoints* _keypointDet;
	CVBufferRef _teleImageLow;
	CVBufferRef _teleImageFaceDetector;
	CVBufferRef _wideImageLow;
	CVBufferRef _undistortedTele;
	CVBufferRef _undistortedWide;
	CVBufferRef _shiftMap;
	CVBufferRef _blurmap;
	CVBufferRef _distortedBlurmap;
	SDOFBlurMap_blurLUTRef _blurLUT;
	MetalContext* _metalContext;
	double _adaptiveCorrectionKeypointsTeleDistorted[1000];
	double _adaptiveCorrectionKeypointsWideDistorted[1000];
	float _pixelSizeTeleMicrometers;
	float _pixelSizeWideMicrometers;
	int _shiftToBlurRadiusAlg;
	SDOFDiagnostics* _diagnostics;
	SDOFTuningParameters* _tuningParameters;
	NSDictionary* _options;

}

@property (nonatomic,retain) NSDictionary * options;              //@synthesize options=_options - In the implementation block
-(void)dealloc;
-(NSDictionary *)options;
-(void)setOptions:(NSDictionary *)arg1 ;
-(void)releaseResources;
-(BOOL)allocateResources;
-(id)initWithMetalContext:(id)arg1 ;
-(BOOL)runWithTele:(opaqueCMSampleBufferRef)arg1 wide:(opaqueCMSampleBufferRef)arg2 result:(CVBufferRef)arg3 ;
-(BOOL)sanityChecksTele:(CVBufferRef)arg1 wide:(CVBufferRef)arg2 result:(CVBufferRef)arg3 ;
-(BOOL)detectFacesOnTele:(CVBufferRef)arg1 meta:(id)arg2 to:(SCD_Struct_SD53*)arg3 maxFacesCount:(int)arg4 facesCount:(int*)arg5 ;
-(void)dumpFocusWindowAndFacesTo:(id)arg1 forLensModelParams:(simple_lens_model_params)arg2 ;
@end

