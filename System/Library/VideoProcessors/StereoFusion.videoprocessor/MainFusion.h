/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, December 27, 2016 at 4:44:18 PM Japan Standard Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /System/Library/VideoProcessors/StereoFusion.videoprocessor
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MTLRenderPipelineState, MTLComputePipelineState, MTLTexture, MTLBuffer, SidecarWriter;
#import <StereoFusion.videoprocessor/StereoFusion.videoprocessor-Structs.h>
@class MetalContext, MPSImageBox, MainFusionResources;

@interface MainFusion : NSObject {

	MetalContext* _metal;
	MainFusionPlist _plist;
	id<MTLRenderPipelineState> _mwarpWithNoiseUpdate;
	id<MTLRenderPipelineState> _pyramidWideTeleBase;
	id<MTLRenderPipelineState> _pyramidWideTele;
	id<MTLRenderPipelineState> _combineConfidenceAndMask;
	id<MTLRenderPipelineState> _pyramidConfidence;
	id<MTLRenderPipelineState> _fuseLevSmallest;
	id<MTLRenderPipelineState> _fuseLevMiddle;
	id<MTLRenderPipelineState> _fuseLevBiggest;
	id<MTLComputePipelineState> _colorNormalizationStep1;
	id<MTLComputePipelineState> _colorNormalizationStep2;
	id<MTLComputePipelineState> _colorNormalizationStep3;
	MPSImageBox* _colorNormalizationBoxFilterHorizontal;
	MPSImageBox* _colorNormalizationBoxFilterVertical;
	id<MTLComputePipelineState> _fmAvgConfMinMaxShifts;
	id<MTLComputePipelineState> _fmComputeHistogram;
	id<MTLComputePipelineState> _fmDetectValleys;
	id<MTLRenderPipelineState> _fmFunWeight;
	id<MTLRenderPipelineState> _estimateEpipoleShift;
	MainFusionResources* _r;
	id<MTLTexture> _constant0;
	id<MTLTexture> _constant1;
	id<MTLBuffer> _homographyAndOriginTele;
	id<MTLBuffer> _homographyAndOriginWide;
	id<MTLBuffer> _gdcData;
	id<MTLBuffer> _fmGParamsBuf;
	id<MTLBuffer> _fmHistogramBuf;
	id<MTLBuffer> _fmHistogramTmp1Buf;
	id<MTLBuffer> _fmHistogramTmp2Buf;
	id<MTLBuffer> _fmFocusWindowBuf;
	id<MTLBuffer> _fmValleysParamsBuf;
	id<MTLBuffer> _fmValleysOutputBuf;
	id<MTLBuffer> _deghostingParams;
	 _zoomRectOrigin;
	 _zoomRectSize;
	BOOL _zoomRectWasSet;
	int _errPersistent;
	id<SidecarWriter> _sidecarWriter;

}

@property (assign,nonatomic,__weak) id<SidecarWriter> sidecarWriter;              //@synthesize sidecarWriter=_sidecarWriter - In the implementation block
-(void)setResources:(id)arg1 ;
-(void)setSidecarWriter:(id<SidecarWriter>)arg1 ;
-(id<SidecarWriter>)sidecarWriter;
-(id)initWithMetalContext:(id)arg1 ;
-(int)parseCameraSetupPlist:(id)arg1 ;
-(int)fuseAndOutputTo:(id)arg1 shiftMap:(id)arg2 confidence:(id)arg3 refImage:(id)arg4 nonRefImage:(id)arg5 teleMetadata:(id)arg6 wideMetadata:(id)arg7 referenceIsWide:(BOOL)arg8 calibInfo:(SCD_Struct_Re15*)arg9 ;
-(int)getZoomRectangle:(CGRect*)arg1 ;
-(int)setZoomRectangle:(id)arg1 ;
-(id)createPipelineStateWithVertexFunction:(id)arg1 fShaderName:(id)arg2 outputFormatCount:(int)arg3 ;
-(id)createPipelineStateWithVertexFunction:(id)arg1 fShaderName:(id)arg2 outputFormat:(unsigned long long)arg3 ;
-(void)setupDeghostingParams:(DeghostingParams*)arg1 ;
-(void)calculateFeatheringParams:(FuseLevParams*)arg1 ;
-(void)populateFuseLevParams:(FuseLevParams*)arg1 level:(int)arg2 gain:(float)arg3 largeZoom:(BOOL)arg4 ;
-(void)gdcShiftMap:(id)arg1 shiftmap:(id)arg2 ;
-(void)computeAvgConfAndMinMaxShifts:(id)arg1 epipoleShift:(id)arg2 confidence:(id)arg3 ;
-(void)fmComputeHistogram:(id)arg1 fmParams:(id)arg2 epipoleShift:(id)arg3 confidence:(id)arg4 ;
-(void)fmDetectValleys:(id)arg1 fmParams:(id)arg2 histogram:(id)arg3 histogramTmp1:(id)arg4 histogramTmp2:(id)arg5 fmvParams:(id)arg6 focusWindow:(id)arg7 epipoleShift:(id)arg8 confidence:(id)arg9 ;
-(void)fmFunWeight:(id)arg1 epipoleShift:(id)arg2 fmvParams:(id)arg3 ;
-(void)setupGDCParametersWithCalibInfo:(SCD_Struct_Re15*)arg1 ;
-(void)setupFrontalMaskParametereWithCalibInfo:(SCD_Struct_Re15*)arg1 ;
-(void)computeFrontalMask:(id)arg1 shiftMap:(id)arg2 confidenceMap:(id)arg3 ;
-(void)combineConfidenceAndMask:(id)arg1 usingConfidence:(id)arg2 andMask:(id)arg3 zoomRectOrigin:(BOOL)arg4 ;
-(void)pyramidConfidence:(id)arg1 input:(id)arg2 ;
-(void)calculateLumaNoiseParams:(LumaNoiseParams*)arg1 andChromaUVvalue:(2*)arg2 usingMetadata:(NoiseParamsMetadata*)arg3 cameraType:(int)arg4 ;
-(void)mwarpWithNoiseUpdateToOutputLuma:(id)arg1 outputChroma:(id)arg2 luma:(id)arg3 chroma:(id)arg4 shiftMap:(id)arg5 referenceIsWide:(BOOL)arg6 ;
-(void)pyramidWideTele:(id)arg1 inputY:(id)arg2 inputUV:(id)arg3 noiseParmas:(LumaNoiseParams*)arg4 doZoom:(BOOL)arg5 ;
-(void)colorNormalizationCoefficients:(id)arg1 source:(id)arg2 target:(id)arg3 confidence:(id)arg4 ;
-(void)outputFuseLev:(id)arg1 refPyr:(id)arg2 nonrefPyr:(id)arg3 confidencePyr:(id)arg4 colorNormParameter:(id)arg5 moreNoiseParams:(ChromaNoiseParamsWideTele*)arg6 gain:(float)arg7 referenceIsWide:(BOOL)arg8 ;
@end

