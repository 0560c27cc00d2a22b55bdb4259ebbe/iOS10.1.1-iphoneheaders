/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, December 27, 2016 at 4:44:18 PM Japan Standard Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /System/Library/VideoProcessors/StereoFusion.videoprocessor
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct {
	[3 columns];
} SCD_Struct_Ca0;

typedef struct {
	float x;
	float y;
} SCD_Struct_Ca1;

typedef struct {
	float fpix;
	 cxy;
} SCD_Struct_Ca2;

typedef struct {
	SCD_Struct_Ca2 metadataADC;
	SCD_Struct_Ca2 metadata;
	float pixelSizeMM;
	float distortionPoly[8];
	float undistortionPoly[8];
} SCD_Struct_Ca3;

typedef struct {
	unsigned long long width;
	unsigned long long height;
	SCD_Struct_Ca3 camera[2];
	SCD_Struct_Ca0 rMat;
	 tVec;
} SCD_Struct_Ca4;

typedef struct {
	SCD_Struct_Ca1 start;
	SCD_Struct_Ca1 end;
} SCD_Struct_Ca5;

typedef struct {
	SCD_Struct_Ca0 homography;
	SCD_Struct_Ca5 refROI;
	SCD_Struct_Ca5 nonRefROI;
} SCD_Struct_Ca6;

typedef struct {
	SCD_Struct_Ca6 refWide;
	SCD_Struct_Ca6 refTele;
	SCD_Struct_Ca5 nonDistortedROIforRefWide;
	SCD_Struct_Ca5 focusWindow;
	SCD_Struct_Ca4 calibModel;
} SCD_Struct_Ca7;

typedef struct opaqueCMSampleBuffer* opaqueCMSampleBufferRef;

typedef struct __CVBuffer* CVBufferRef;

typedef struct __CVPixelBufferPool* CVPixelBufferPoolRef;

typedef struct {
	int hTaps;
	int vTaps;
	int hPhases;
	int vPhases;
	int prePointBits;
	int postPointBits;
} SCD_Struct_M211;

typedef struct __IOSurfaceAccelerator* IOSurfaceAcceleratorRef;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct __IOSurface* IOSurfaceRef;

typedef struct {
	SCD_Struct_Ca4 field1;
	SCD_Struct_Ca5 field2;
	SCD_Struct_Ca5 field3;
	SCD_Struct_Ca6 field4;
	SCD_Struct_Ca6 field5;
} SCD_Struct_Re15;

typedef struct {
	float distortPolynomialCoefficients[8];
	float undistortPolynomialCoefficients[8];
	float centerX;
	float centerY;
} SCD_Struct_Ca16;

typedef struct {
	unsigned long long field1;
	unsigned long long field2;
	SCD_Struct_Ca0 field3[2];
	SCD_Struct_Ca3 field4;
} SCD_Struct_Ca17;

typedef struct PyramidStageConfiguration {
	BOOL use_m2m;
	BOOL do_sync_at_end;
	BOOL compensate_gpu_shift;
} PyramidStageConfiguration;

typedef struct FactorParams {
	float low;
	float high;
	float lowThreshold;
	float highThreshold;
} FactorParams;

typedef struct NoiseParams {
	float gainExponentAtLowGain;
	float slopeAmplificationAtLowGain;
	float biasAmplificationAtLowGain;
	float slopeAmplificationAtHighGain;
	float biasAmplificationAtHighGain;
	float gainExponentAtHighGain;
	float noiseMinimumStandardDeviation;
	float noiseMaximumStandardDeviation;
	float awbbGainExponent;
	float awbrGainExponent;
	float thresholdToTransitionBetweenLowAndHighGainModes;
} NoiseParams;

typedef struct BrightnessDependence {
	float smallZoom[4];
	float largeZoom[4];
} BrightnessDependence;

typedef struct HighFreqDeghosting {
	float meanConfThreshold;
	float confLevels[3];
	float minSigma[3];
	float maxSigma[3];
	float minSigmaThreshold;
	float maxSigmaThreshold;
} HighFreqDeghosting;

typedef struct FMValleysParams {
	float valleyStrength;
	unsigned minValleyWidth;
	unsigned smallShiftRange;
	float nominalWeight;
	unsigned farFocusShift;
	BOOL selectFocusPlaneOnly;
} FMValleysParams;

typedef struct FeatheringParams {
	float pwr;
	float pwr2;
	float shape;
} FeatheringParams;

typedef struct StrengthModulation {
	FactorParams SmallZoom[4];
	FactorParams LargeZoom[4];
} StrengthModulation;

typedef struct LowFreqDeghosting {
	StrengthModulation FusionLuma;
	BrightnessDependence BrightnessLuma;
	StrengthModulation FusionChroma;
	BrightnessDependence BrightnessChroma;
} LowFreqDeghosting;

typedef struct MainFusionPlist {
	StrengthModulation TeleEdge;
	float teleEdgeFactorLev[4];
	StrengthModulation BestFocus;
	float bestFocusFactorLev[4];
	StrengthModulation NoiseWeight;
	StrengthModulation Sharpening;
	NoiseParams noiseTele;
	NoiseParams noiseWide;
	LowFreqDeghosting LFdeghosting;
	HighFreqDeghosting Deghosting;
	FMValleysParams fmValleys;
	FeatheringParams featheringParams;
} MainFusionPlist;

typedef struct AdaptiveCorrectionConfig {
	double epErrorLimitWidePix_FirstPass;
	double epErrorLimitWidePix_SecondPass;
	double rangePFL_T;
	double rangePFL_W;
	double rangeOCxT;
	double rangeOCxW;
	double rangeOCyW;
	double intermediateMacroDistMM;
	double extremeMacroDistMM;
	int minPointsForAdjustment;
	double errorVal_GreaterThanInf;
	double errorVal_LessThanExtremeMacro;
	double errorVal_BetweenIntermediate_ExtremeMacro;
	BOOL runAnalyticalPreconditioning;
	double spgEpsilon;
} AdaptiveCorrectionConfig;

typedef struct {
	/*function pointer*/void* field1;
	/*function pointer*/void* field2;
	/*function pointer*/void* field3[10];
	unsigned long long field4;
	unsigned long long field5;
	unsigned long long field6;
	unsigned long long field7;
	unsigned long long field8;
	unsigned long long field9;
	int field10;
	int field11;
	unsigned short field12;
	float field13[900];
	float field14[900];
	unsigned short field15[900];
	unsigned short field16[900];
	unsigned short field17[900];
	float field18[900];
	float field19[900];
	float field20[900];
	float field21[900];
	float field22[900];
	float field23[900];
	float field24[900];
	/*function pointer*/void* field25;
	/*function pointer*/void* field26;
} SCD_Struct_AD29;

typedef struct {
	unsigned long long numberOfHistogramEntries;
	BOOL histogramForAlpha;
	 minPixelValue;
	 maxPixelValue;
} SCD_Struct_AD30;

typedef struct {
	float field1[8];
	float field2[8];
	float field3;
	float field4;
	float field5;
	float field6;
	float field7;
	float field8;
	float field9[9];
	float field10[9];
	float field11;
} SCD_Struct_GD31;

typedef struct {
	unsigned short field1;
	unsigned short field2;
	unsigned short field3;
	unsigned short field4;
} SCD_Struct_Re32;

typedef struct {
	unsigned short field1;
	unsigned short field2;
	unsigned short field3;
	SCD_Struct_Re32 field4[15];
} SCD_Struct_Re33;

typedef struct {
	unsigned width;
	unsigned height;
} SCD_Struct_Re34;

typedef struct {
	33f d;
} SCD_Struct_Re35;

typedef struct {
	unsigned short filterXindex;
	unsigned short filterYindex;
	unsigned short doGamma;
	unsigned short srcX0;
	unsigned short srcY0;
	unsigned short srcWidth;
	unsigned short srcHeight;
} SCD_Struct_Re36;

typedef struct {
	unsigned numRings;
	unsigned numSamplesPerRing;
	float range;
} SCD_Struct_Re37;

typedef struct {
	unsigned short numThreadGroupWidth;
	unsigned short numThreadGroupHeight;
	unsigned short numThreadsPerGroupWidth;
	unsigned short numThreadsPerGroupHeight;
} SCD_Struct_Re38;

typedef struct {
	unsigned short maxTotalThreadsPerThreadgroup;
	unsigned short threadExecutionWidth;
	unsigned short pixPerCall;
	15SCD_Struct_Re38 pyramid;
} SCD_Struct_Re39;

typedef struct {
	unsigned short field1;
	unsigned short field2;
	unsigned short field3;
	SCD_Struct_Re38 field4[15];
} SCD_Struct_Re40;

typedef struct {
	unsigned field1;
	unsigned field2;
	unsigned field3;
	unsigned field4;
} SCD_Struct_Re41;

typedef struct {
	float field1[3];
} SCD_Struct_Re42;

typedef struct {
	SCD_Struct_Re34 field1;
	SCD_Struct_Re34 field2;
	SCD_Struct_Re41 field3;
	SCD_Struct_Re42 field4;
	float field5;
	float field6;
} SCD_Struct_Re43;

typedef struct {
	unsigned long long width;
	unsigned long long height;
	unsigned long long depth;
} SCD_Struct_Sp44;

typedef struct clamped_ratio_params {
	float epsilon;
	float scaling;
	float bias;
} clamped_ratio_params;

typedef struct asym_parabola_params {
	float epsilon;
	float scaling;
} asym_parabola_params;

typedef struct exponential_params {
	float epsilon;
	float scaling;
	float bias;
} exponential_params;

typedef struct asym_ratio_parabola_params {
	float epsilon;
	float scaling;
} asym_ratio_parabola_params;

typedef struct bleeding_equation_params {
	clamped_ratio_params clamped_ratio;
	asym_parabola_params asym_parabola;
	exponential_params exponential;
	asym_ratio_parabola_params asym_ratio_parabola;
	int mode;
} bleeding_equation_params;

typedef struct rendering_config_params {
	int lumaNoiseEstPercentile;
	int chromaNoiseEstPercentile;
	float lumaNoiseScale;
	float chromaNoiseScale;
	float maxBGBlur;
	float sharpRadius;
	float softRadius;
	float lumaNoiseModelCoeff;
	float chromaNoiseModelCoeff;
	float lodBias;
	float blooming;
} rendering_config_params;

typedef struct simple_lens_model_params {
	float left;
	float top;
	float width;
	float height;
	float zeroShiftPercentile;
	float focusShift;
	float focalLength;
	float aperture;
	float baselineDist;
	float shiftScaling;
	float trenchFilterRadius;
	float trenchFilterZeroThreshold;
	float maxFGBlur;
	float maxBGBlur;
	float shiftDeadZone;
	float shiftDeadZoneAdaptivity;
	 facesCentreX;
	 facesCentreY;
	 facesLeftEyeX;
	 facesLeftEyeY;
	 facesRightEyeX;
	 facesRightEyeY;
	float facesMaxBlurOnEyes;
	float facesMaxBlurDistFromFocus;
	float facesEyeToEyebrowRatio;
	float facesLinearBlurGrowthM;
	float facesLinearBlurGrowthC;
	float facesDistToBlurScaling;
	float facesCapMultip;
	float facesGainMultip;
	float imageAspectRatio;
} simple_lens_model_params;

typedef struct SDOFBlurMap_blurLUT* SDOFBlurMap_blurLUTRef;

typedef struct {
	CGPoint field1;
	CGPoint field2;
	CGPoint field3;
} SCD_Struct_SD53;

typedef struct {
	char field1;
	char field2;
	char field3;
	char field4;
	float field5;
	float field6;
	float field7[8];
	float field8[8];
	float field9[8];
	float field10[8];
} SCD_Struct_SD54;

