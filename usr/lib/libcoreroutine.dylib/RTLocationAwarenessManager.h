/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, December 27, 2016 at 4:43:03 PM Japan Standard Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /usr/lib/libcoreroutine.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, OS_dispatch_source;
#import <libcoreroutine.dylib/libcoreroutine.dylib-Structs.h>
@class RTLocationAwarenessMetrics, RTMetricManager, CLLocation, NSObject, RTLocationAwarenessManagerConfig, RTLocationManager, NSDate, NSNumber, RTMotionActivityManager, NSMapTable;

@interface RTLocationAwarenessManager : NSObject {

	RTLocationAwarenessMetrics* _metrics;
	RTMetricManager* _metricManager;
	CLLocation* _lastLocationAnyPositive;
	CLLocation* _lastLocationLessThan200m;
	CLLocation* _lastLocationLessThan55m;
	CLLocation* _lastLocationLessThan20m;
	CLLocation* _lastLocationLessThan10m;
	NSObject*<OS_dispatch_queue> _queue;
	RTLocationAwarenessManagerConfig* _config;
	NSMapTable* _requesterToHeartbeatBucket;
	NSMapTable* _heartbeatBucketToRequesters;
	RTLocationManager* _locationManager;
	NSObject*<OS_dispatch_source> _heartbeatTimer;
	NSObject*<OS_dispatch_source> _restTimer;
	NSDate* _activeOnset;
	NSNumber* _minHeartbeatBucket;
	CLLocation* _lastValidLocation;
	RTMotionActivityManager* _motionActivityManager;
	NSDate* _stationaryStartTimestamp;

}

@property (nonatomic,retain) RTLocationAwarenessMetrics * metrics;                         //@synthesize metrics=_metrics - In the implementation block
@property (nonatomic,retain) RTMetricManager * metricManager;                              //@synthesize metricManager=_metricManager - In the implementation block
@property (nonatomic,retain) CLLocation * lastLocationAnyPositive;                         //@synthesize lastLocationAnyPositive=_lastLocationAnyPositive - In the implementation block
@property (nonatomic,retain) CLLocation * lastLocationLessThan200m;                        //@synthesize lastLocationLessThan200m=_lastLocationLessThan200m - In the implementation block
@property (nonatomic,retain) CLLocation * lastLocationLessThan55m;                         //@synthesize lastLocationLessThan55m=_lastLocationLessThan55m - In the implementation block
@property (nonatomic,retain) CLLocation * lastLocationLessThan20m;                         //@synthesize lastLocationLessThan20m=_lastLocationLessThan20m - In the implementation block
@property (nonatomic,retain) CLLocation * lastLocationLessThan10m;                         //@synthesize lastLocationLessThan10m=_lastLocationLessThan10m - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> queue;                         //@synthesize queue=_queue - In the implementation block
@property (nonatomic,readonly) RTLocationAwarenessManagerConfig * config;                  //@synthesize config=_config - In the implementation block
@property (nonatomic,retain) NSMapTable * requesterToHeartbeatBucket;                      //@synthesize requesterToHeartbeatBucket=_requesterToHeartbeatBucket - In the implementation block
@property (nonatomic,retain) NSMapTable * heartbeatBucketToRequesters;                     //@synthesize heartbeatBucketToRequesters=_heartbeatBucketToRequesters - In the implementation block
@property (nonatomic,retain) RTLocationManager * locationManager;                          //@synthesize locationManager=_locationManager - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> heartbeatTimer;                 //@synthesize heartbeatTimer=_heartbeatTimer - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> restTimer;                      //@synthesize restTimer=_restTimer - In the implementation block
@property (nonatomic,copy) NSDate * activeOnset;                                           //@synthesize activeOnset=_activeOnset - In the implementation block
@property (nonatomic,retain) NSNumber * minHeartbeatBucket;                                //@synthesize minHeartbeatBucket=_minHeartbeatBucket - In the implementation block
@property (nonatomic,retain) CLLocation * lastValidLocation;                               //@synthesize lastValidLocation=_lastValidLocation - In the implementation block
@property (nonatomic,retain) RTMotionActivityManager * motionActivityManager;              //@synthesize motionActivityManager=_motionActivityManager - In the implementation block
@property (nonatomic,copy) NSDate * stationaryStartTimestamp;                              //@synthesize stationaryStartTimestamp=_stationaryStartTimestamp - In the implementation block
+(id)sharedInstance;
+(long long)localHourFromTimestamp:(id)arg1 ;
+(id)createDefaultDispatchTimerWithQueue:(id)arg1 ;
+(void)invalidateDispatchTimer:(id)arg1 ;
+(void)pauseDispatchTimer:(id)arg1 ;
-(id)init;
-(RTLocationAwarenessManagerConfig *)config;
-(RTLocationAwarenessMetrics *)metrics;
-(NSObject*<OS_dispatch_queue>)queue;
-(id)defaultQueue;
-(void)setMetrics:(RTLocationAwarenessMetrics *)arg1 ;
-(RTLocationManager *)locationManager;
-(void)setLocationManager:(RTLocationManager *)arg1 ;
-(void)shutdown;
-(RTMetricManager *)metricManager;
-(void)setMetricManager:(RTMetricManager *)arg1 ;
-(BOOL)addLocationHeartbeatRequester:(id)arg1 withInterval:(double)arg2 error:(id*)arg3 ;
-(void)removeLocationHeartbeatRequester:(id)arg1 ;
-(void)_shutdown;
-(RTMotionActivityManager *)motionActivityManager;
-(void)setMotionActivityManager:(RTMotionActivityManager *)arg1 ;
-(CLLocation *)lastLocationAnyPositive;
-(id)updateWithLocation:(id)arg1 oneIntervalHistogram:(id)arg2 lastLocation:(id)arg3 ;
-(void)setLastLocationAnyPositive:(CLLocation *)arg1 ;
-(CLLocation *)lastLocationLessThan200m;
-(void)setLastLocationLessThan200m:(CLLocation *)arg1 ;
-(CLLocation *)lastLocationLessThan55m;
-(void)setLastLocationLessThan55m:(CLLocation *)arg1 ;
-(CLLocation *)lastLocationLessThan20m;
-(void)setLastLocationLessThan20m:(CLLocation *)arg1 ;
-(CLLocation *)lastLocationLessThan10m;
-(void)setLastLocationLessThan10m:(CLLocation *)arg1 ;
-(double)metricAge;
-(void)incrementHeartbeatActiveRequestCountForTimestamp:(id)arg1 ;
-(void)incrementHeartbeatTimerFiringCountForTimestamp:(id)arg1 ;
-(void)incrementHeartbeatValidLocationCountForTimestamp:(id)arg1 ;
-(void)updateLocationAwarenessHistogramsWithLocations:(id)arg1 ;
-(void)considerSubmittingCurrentMetrics;
-(void)onLeechedLocationNotification:(id)arg1 ;
-(void)onMotionActivityManagerNotificationActivityNotification:(id)arg1 ;
-(id)initWithQueue:(id)arg1 locationManager:(id)arg2 config:(id)arg3 metricManager:(id)arg4 motionActivityManager:(id)arg5 ;
-(id)initWithQueue:(id)arg1 locationManager:(id)arg2 config:(id)arg3 metricManager:(id)arg4 ;
-(id)initWithQueue:(id)arg1 locationManager:(id)arg2 config:(id)arg3 ;
-(id)initWithQueue:(id)arg1 locationManager:(id)arg2 ;
-(id)initWithLocationManager:(id)arg1 ;
-(NSObject*<OS_dispatch_source>)heartbeatTimer;
-(NSObject*<OS_dispatch_source>)restTimer;
-(void)onRest;
-(BOOL)validInterval:(double)arg1 ;
-(id)heartbeatBucketForInterval:(double)arg1 ;
-(NSMapTable *)requesterToHeartbeatBucket;
-(NSMapTable *)heartbeatBucketToRequesters;
-(void)updateMinHeartbeatBucket;
-(void)setMinHeartbeatBucket:(NSNumber *)arg1 ;
-(void)adjustHeartbeatTimer;
-(NSNumber *)minHeartbeatBucket;
-(double)intervalForHeartbeatBucket:(id)arg1 ;
-(double)starvingDurationTillNow;
-(double)nextFiringDelayWithHeartbeatInterval:(double)arg1 starvingDuration:(double)arg2 ;
-(NSDate *)activeOnset;
-(void)considerRequestingForLocation;
-(void)onHeartbeat;
-(void)resetOneShotDispatchTimer:(id)arg1 withStart:(unsigned long long)arg2 eventHandler:(/*^block*/id)arg3 ;
-(CLLocation *)lastValidLocation;
-(NSDate *)stationaryStartTimestamp;
-(void)onNoOpLocationNotification:(id)arg1 ;
-(BOOL)validLocation:(id)arg1 ;
-(void)setLastValidLocation:(CLLocation *)arg1 ;
-(void)setStationaryStartTimestamp:(NSDate *)arg1 ;
-(void)setRequesterToHeartbeatBucket:(NSMapTable *)arg1 ;
-(void)setHeartbeatBucketToRequesters:(NSMapTable *)arg1 ;
-(void)setHeartbeatTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)setRestTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)setActiveOnset:(NSDate *)arg1 ;
@end

